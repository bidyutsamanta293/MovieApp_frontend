import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import { Inter } from '@next/font/google';
import styles from '../styles/Home.module.css';
import image from '../Images/loginPaage/Picture.png';
import stylelogin from '../styles/login.module.css';
import Paper from '@mui/material/Paper';
import Grid from '@mui/material/Grid';
import Typography from '@mui/material/Typography';
import TextField from '@mui/material/TextField';

import PhoneInput from 'react-phone-input-2';
import 'react-phone-input-2/lib/style.css';
import Button from '@mui/material/Button';
import { Alert, Snackbar } from '@mui/material';
import { Box } from '@mui/system';
import MaxWidthWrapper from '../src/components/common/MaxWidthWrapper';
import CreateAccountPopup from '../src/components/loginPage/CreateAccountPopup';
// import AuthComponent from '../src/components/common/AuthComponent';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const router = useRouter();

  const [error, setError] = useState(false);
  const [error1, setError1] = useState(false);
  const [btn, setBtn] = useState(true);
  const [warn, setWarn] = useState<boolean>(false);
  const [showPage, setShowPage] = useState<boolean>(false);
  const [accountData, setAccountData] = useState<any>();
  const [phoneNumber, setPhoneNumber] = useState<number>(0);
  const [password, setPassword] = useState<string>();

  useEffect(() => {
    if (!error && !error1) {
      setBtn(false);
    } else {
      setBtn(true);
    }
  }, [error, error1]);

  useEffect(() => {
    if (localStorage.getItem('isLogin')) {
      router.push('/');
    }
    console.log('accountData', accountData);
  }, []);

  useEffect(() => {
    if (phoneNumber > 0 || password === '') {
      setBtn(true);
    } else {
      setBtn(false);
    }
  }, []);

  const handleChange = (event: any) => {
    setPhoneNumber(event.target.value);
    console.log('phone number', event.target.value.trim().length);
    if (accountData) {
      if (event.target.value === accountData.number) {
        setError(false);
      } else {
        setError(true);
      }
    } else {
      // setWarn(false);
      if (event.target.value === '8877665544') {
        setError(false);
      } else {
        setError(true);
      }
    }
  };

  const handleChangepswd = (event: any) => {
    setPassword(event.target.value);
    if (accountData) {
      if (event.target.value === accountData.password) {
        setError1(false);
      } else {
        setError1(true);
      }
    } else {
      // setWarn(true);
      if (event.target.value === '123456') {
        setError1(false);
      } else {
        setError1(true);
      }
    }
  };

  const handleCreateAccount = () => {
    setShowPage(true);
  };

  const handleLogin = () => {
    // console.log(
    //   'check',
    //   document.getElementById('standard-number').value === '' ||
    //     document.getElementById('standard-textarea').value === ''
    // );
    // if (
    //   document.getElementById('standard-number').value === '' ||
    //   document.getElementById('standard-textarea').value === ''
    // ) {
    //   setWarn(true);
    // } else {
    localStorage.setItem('isLogin', 'true');
    localStorage.setItem('name', 'bidyut');
    router.push('/');
    // }
  };

  // const handleClose = () => {
  //   setWarn(false);
  // };
  console.log('btn', btn);

  return (
    <>
      <Head>
        <title>Book Your Show</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box className={stylelogin.bgImage}>
        {/* <Image src={image} alt='image' className={stylelogin.backImage} width='400' height='100' /> */}
        {/* {warn && (
          <Snackbar open={warn} autoHideDuration={3000} onClose={handleClose}>
            <Alert onClose={handleClose} severity="error" sx={{ width: '100%' }}>
              Please fill proper Email and Password
            </Alert>
          </Snackbar>
        )} */}
        <MaxWidthWrapper>
          <Paper elevation={3} className={stylelogin.paper}>
            <Grid container spacing={2} className={stylelogin.gridin}>
              <Grid item xs={12} className={stylelogin.gridmain}>
                <Typography variant="h4" component="h2" className={stylelogin.idtext}>
                  TIX ID
                </Typography>
              </Grid>

              <Grid item xs={12} className={stylelogin.gridlabel}>
                {/* <PhoneInput
                country={'us'}
                containerStyle={{ border: 'none' }}
                containerClass={stylelogin.phoneContainer}
                inputClass={stylelogin.phoneInput}
                buttonClass={stylelogin.phonebutton}
                inputStyle={{
                  border: '0px',
                  borderBottom: '1px solid #9DA8BE',
                  borderRadius: '0px',
                  backgroundColor: 'transparent',
                  color: '#9DA8BE',
                  // borderLeft: '1px solid #9DA8BE',
                }}
                buttonStyle={{
                  border: '0px',
                  // borderBottom: '1px solid #9DA8BE',
                  backgroundColor: 'transparent',
                  // borderRight: '2px solid #9DA8BE',
                  paddingRight: '3px',
                }}
                // value={this.state.phone}
                // onChange={(phone) => this.setState({ phone })}
              /> */}

                <TextField
                  id="standard-number"
                  // className={stylelogin.phone}
                  style={{ width: '72%' }}
                  label="PHONE NUMBER"
                  placeholder="Enter Phone Number here"
                  type="number"
                  name="number"
                  InputLabelProps={{
                    shrink: true
                  }}
                  onChange={event => handleChange(event)}
                  error={error}
                  helperText={error ? 'Wrong Number' : ''}
                  // InputProps={{ classes: {stylelogin.phone} }}
                  variant="standard"
                />
              </Grid>

              <Grid item xs={12} className={stylelogin.gridpswd}>
                <TextField
                  id="standard-textarea"
                  label="PASSWORD"
                  name="password"
                  style={{ width: '72%', color: '#1A2C50' }}
                  placeholder="Enter Password here"
                  multiline
                  onChange={event => handleChangepswd(event)}
                  InputLabelProps={{
                    shrink: true
                  }}
                  error={error1}
                  helperText={error1 ? 'Wrong Password' : ''}
                  variant="standard"
                />
              </Grid>

              <Grid item xs={12} className={stylelogin.gridlabel}>
                <Button
                  variant="contained"
                  sx={{
                    width: '72%',
                    backgroundColor: btn ? '#a7a7a7' : '#1A2C50'
                  }}
                  onClick={handleLogin}
                  disabled={btn}>
                  LOGIN
                </Button>
              </Grid>

              <Grid item xs={12} className={stylelogin.gridmain}>
                <Typography
                  variant="h6"
                  component="h5"
                  style={{
                    width: '100%',
                    display: 'flex',
                    justifyContent: 'center',
                    fontSize: '12px',
                    color: '#9e9e9e'
                  }}>
                  <a href="#">dont have account?</a>
                </Typography>
              </Grid>

              <Grid item xs={12} className={stylelogin.gridmain}>
                <Button
                  variant="outlined"
                  onClick={handleCreateAccount}
                  // disabled={btn}
                  sx={{
                    width: '72%',
                    marginBottom: '110px',
                    color: '#1A2C50',
                    cursor: 'pointer',
                    border: '1px solid #1A2C50',
                    '&:hover': {
                      color: '#fff',
                      backgroundColor: '#1A2C50'
                    }
                  }}>
                  Create Account
                </Button>
              </Grid>
            </Grid>
          </Paper>
          {showPage && (
            <CreateAccountPopup
              showPage={showPage}
              setAccountData={setAccountData}
              setShowPage={setShowPage}
            />
          )}
        </MaxWidthWrapper>
      </Box>
      {/* </main> */}
    </>
  );
}
